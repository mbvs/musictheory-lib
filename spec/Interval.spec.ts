import { expect, describe, test } from '@jest/globals';
import Interval from '../src/Interval';
import Note from '../src/Note';

describe('Intervals', () => {
  test('should build accending intervals over F correctly', () => {
    expect(new Interval(new Note('F'), 'P1').notes[1].toString()).toBe('F4');
    expect(new Interval(new Note('F'), 'd2').notes[1].toString()).toBe('G4bb');
    expect(new Interval(new Note('F'), 'm2').notes[1].toString()).toBe('G4b');
    expect(new Interval(new Note('F'), 'A1').notes[1].toString()).toBe('F4#');
    expect(new Interval(new Note('F'), 'M2').notes[1].toString()).toBe('G4');
    expect(new Interval(new Note('F'), 'd3').notes[1].toString()).toBe('A4bb');
    expect(new Interval(new Note('F'), 'm3').notes[1].toString()).toBe('A4b');
    expect(new Interval(new Note('F'), 'A2').notes[1].toString()).toBe('G4#');
    expect(new Interval(new Note('F'), 'M3').notes[1].toString()).toBe('A4');
    expect(new Interval(new Note('F'), 'd4').notes[1].toString()).toBe('B4bb');
    expect(new Interval(new Note('F'), 'P4').notes[1].toString()).toBe('B4b');
    expect(new Interval(new Note('F'), 'A3').notes[1].toString()).toBe('A4#');
    expect(new Interval(new Note('F'), 'A4').notes[1].toString()).toBe('B4');
    expect(new Interval(new Note('F'), 'd5').notes[1].toString()).toBe('C5b');
    expect(new Interval(new Note('F'), 'P5').notes[1].toString()).toBe('C5');
    expect(new Interval(new Note('F'), 'd6').notes[1].toString()).toBe('D5bb');
    expect(new Interval(new Note('F'), 'm6').notes[1].toString()).toBe('D5b');
    expect(new Interval(new Note('F'), 'A5').notes[1].toString()).toBe('C5#');
    expect(new Interval(new Note('F'), 'M6').notes[1].toString()).toBe('D5');
    expect(new Interval(new Note('F'), 'd7').notes[1].toString()).toBe('E5bb');
    expect(new Interval(new Note('F'), 'm7').notes[1].toString()).toBe('E5b');
    expect(new Interval(new Note('F'), 'A6').notes[1].toString()).toBe('D5#');
    expect(new Interval(new Note('F'), 'M7').notes[1].toString()).toBe('E5');
    expect(new Interval(new Note('F'), 'd8').notes[1].toString()).toBe('F5b');
    expect(new Interval(new Note('F'), 'P8').notes[1].toString()).toBe('F5');
  });

  test('should build accending intervals over Gb correctly', () => {
    expect(new Interval(new Note('Gb'), 'P1').notes[1].toString()).toBe('G4b');
    expect(new Interval(new Note('Gb'), 'd2').notes[1].toString()).toBe('A4bbb');
    expect(new Interval(new Note('Gb'), 'm2').notes[1].toString()).toBe('A4bb');
    expect(new Interval(new Note('Gb'), 'A1').notes[1].toString()).toBe('G4');
    expect(new Interval(new Note('Gb'), 'M2').notes[1].toString()).toBe('A4b');
    expect(new Interval(new Note('Gb'), 'd3').notes[1].toString()).toBe('B4bbb');
    expect(new Interval(new Note('Gb'), 'm3').notes[1].toString()).toBe('B4bb');
    expect(new Interval(new Note('Gb'), 'A2').notes[1].toString()).toBe('A4');
    expect(new Interval(new Note('Gb'), 'M3').notes[1].toString()).toBe('B4b');
    expect(new Interval(new Note('Gb'), 'd4').notes[1].toString()).toBe('C5bb');
    expect(new Interval(new Note('Gb'), 'P4').notes[1].toString()).toBe('C5b');
    expect(new Interval(new Note('Gb'), 'A3').notes[1].toString()).toBe('B4');
    expect(new Interval(new Note('Gb'), 'A4').notes[1].toString()).toBe('C5');
    expect(new Interval(new Note('Gb'), 'd5').notes[1].toString()).toBe('D5bb');
    expect(new Interval(new Note('Gb'), 'P5').notes[1].toString()).toBe('D5b');
    expect(new Interval(new Note('Gb'), 'd6').notes[1].toString()).toBe('E5bbb');
    expect(new Interval(new Note('Gb'), 'm6').notes[1].toString()).toBe('E5bb');
    expect(new Interval(new Note('Gb'), 'A5').notes[1].toString()).toBe('D5');
    expect(new Interval(new Note('Gb'), 'M6').notes[1].toString()).toBe('E5b');
    expect(new Interval(new Note('Gb'), 'd7').notes[1].toString()).toBe('F5bb');
    expect(new Interval(new Note('Gb'), 'm7').notes[1].toString()).toBe('F5b');
    expect(new Interval(new Note('Gb'), 'A6').notes[1].toString()).toBe('E5');
    expect(new Interval(new Note('Gb'), 'M7').notes[1].toString()).toBe('F5');
    expect(new Interval(new Note('Gb'), 'd8').notes[1].toString()).toBe('G5bb');
    expect(new Interval(new Note('Gb'), 'P8').notes[1].toString()).toBe('G5b');
  });

  test('should build accending intervals over A# correctly', () => {
    expect(new Interval(new Note('A#'), 'P1').notes[1].toString()).toBe('A4#');
    expect(new Interval(new Note('A#'), 'd2').notes[1].toString()).toBe('B4b');
    expect(new Interval(new Note('A#'), 'm2').notes[1].toString()).toBe('B4');
    expect(new Interval(new Note('A#'), 'A1').notes[1].toString()).toBe('A4##');
    expect(new Interval(new Note('A#'), 'M2').notes[1].toString()).toBe('B4#');
    expect(new Interval(new Note('A#'), 'd3').notes[1].toString()).toBe('C5');
    expect(new Interval(new Note('A#'), 'm3').notes[1].toString()).toBe('C5#');
    expect(new Interval(new Note('A#'), 'A2').notes[1].toString()).toBe('B4##');
    expect(new Interval(new Note('A#'), 'M3').notes[1].toString()).toBe('C5##');
    expect(new Interval(new Note('A#'), 'd4').notes[1].toString()).toBe('D5');
    expect(new Interval(new Note('A#'), 'P4').notes[1].toString()).toBe('D5#');
    expect(new Interval(new Note('A#'), 'A3').notes[1].toString()).toBe('C5###');
    expect(new Interval(new Note('A#'), 'A4').notes[1].toString()).toBe('D5##');
    expect(new Interval(new Note('A#'), 'd4').notes[1].toString()).toBe('D5');
    expect(new Interval(new Note('A#'), 'P5').notes[1].toString()).toBe('E5#');
    expect(new Interval(new Note('A#'), 'd6').notes[1].toString()).toBe('F5');
    expect(new Interval(new Note('A#'), 'm6').notes[1].toString()).toBe('F5#');
    expect(new Interval(new Note('A#'), 'A5').notes[1].toString()).toBe('E5##');
    expect(new Interval(new Note('A#'), 'M6').notes[1].toString()).toBe('F5##');
    expect(new Interval(new Note('A#'), 'd7').notes[1].toString()).toBe('G5');
    expect(new Interval(new Note('A#'), 'm7').notes[1].toString()).toBe('G5#');
    expect(new Interval(new Note('A#'), 'A6').notes[1].toString()).toBe('F5###');
    expect(new Interval(new Note('A#'), 'M7').notes[1].toString()).toBe('G5##');
    expect(new Interval(new Note('A#'), 'd8').notes[1].toString()).toBe('A5');
    expect(new Interval(new Note('A#'), 'P8').notes[1].toString()).toBe('A5#');
  });

  test('should build decending intervals under F correctly', () => {
    expect(new Interval(new Note('F'), 'P1', 'down').notes[1].toString()).toBe('F4');
    expect(new Interval(new Note('F'), 'd2', 'down').notes[1].toString()).toBe('E4#');
    expect(new Interval(new Note('F'), 'm2', 'down').notes[1].toString()).toBe('E4');
    expect(new Interval(new Note('F'), 'A1', 'down').notes[1].toString()).toBe('F4b');
    expect(new Interval(new Note('F'), 'M2', 'down').notes[1].toString()).toBe('E4b');
    expect(new Interval(new Note('F'), 'd3', 'down').notes[1].toString()).toBe('D4#');
    expect(new Interval(new Note('F'), 'm3', 'down').notes[1].toString()).toBe('D4');
    expect(new Interval(new Note('F'), 'A2', 'down').notes[1].toString()).toBe('E4bb');
    expect(new Interval(new Note('F'), 'M3', 'down').notes[1].toString()).toBe('D4b');
    expect(new Interval(new Note('F'), 'd4', 'down').notes[1].toString()).toBe('C4#');
    expect(new Interval(new Note('F'), 'P4', 'down').notes[1].toString()).toBe('C4');
    expect(new Interval(new Note('F'), 'A3', 'down').notes[1].toString()).toBe('D4bb');
    expect(new Interval(new Note('F'), 'A4', 'down').notes[1].toString()).toBe('C4b');
    expect(new Interval(new Note('F'), 'd5', 'down').notes[1].toString()).toBe('B3');
    expect(new Interval(new Note('F'), 'P5', 'down').notes[1].toString()).toBe('B3b');
    expect(new Interval(new Note('F'), 'd6', 'down').notes[1].toString()).toBe('A3#');
    expect(new Interval(new Note('F'), 'm6', 'down').notes[1].toString()).toBe('A3');
    expect(new Interval(new Note('F'), 'A5', 'down').notes[1].toString()).toBe('B3bb');
    expect(new Interval(new Note('F'), 'M6', 'down').notes[1].toString()).toBe('A3b');
    expect(new Interval(new Note('F'), 'd7', 'down').notes[1].toString()).toBe('G3#');
    expect(new Interval(new Note('F'), 'm7', 'down').notes[1].toString()).toBe('G3');
    expect(new Interval(new Note('F'), 'A6', 'down').notes[1].toString()).toBe('A3bb');
    expect(new Interval(new Note('F'), 'M7', 'down').notes[1].toString()).toBe('G3b');
    expect(new Interval(new Note('F'), 'd8', 'down').notes[1].toString()).toBe('F3#');
    expect(new Interval(new Note('F'), 'P8', 'down').notes[1].toString()).toBe('F3');
  });

  test('should build decending intervals under Gb correctly', () => {
    expect(new Interval(new Note('Gb'), 'P1', 'down').notes[1].toString()).toBe('G4b');
    expect(new Interval(new Note('Gb'), 'd2', 'down').notes[1].toString()).toBe('F4#');
    expect(new Interval(new Note('Gb'), 'm2', 'down').notes[1].toString()).toBe('F4');
    expect(new Interval(new Note('Gb'), 'A1', 'down').notes[1].toString()).toBe('G4bb');
    expect(new Interval(new Note('Gb'), 'M2', 'down').notes[1].toString()).toBe('F4b');
    expect(new Interval(new Note('Gb'), 'd3', 'down').notes[1].toString()).toBe('E4');
    expect(new Interval(new Note('Gb'), 'm3', 'down').notes[1].toString()).toBe('E4b');
    expect(new Interval(new Note('Gb'), 'A2', 'down').notes[1].toString()).toBe('F4bb');
    expect(new Interval(new Note('Gb'), 'M3', 'down').notes[1].toString()).toBe('E4bb');
    expect(new Interval(new Note('Gb'), 'd4', 'down').notes[1].toString()).toBe('D4');
    expect(new Interval(new Note('Gb'), 'P4', 'down').notes[1].toString()).toBe('D4b');
    expect(new Interval(new Note('Gb'), 'A3', 'down').notes[1].toString()).toBe('E4bbb');
    expect(new Interval(new Note('Gb'), 'A4', 'down').notes[1].toString()).toBe('D4bb');
    expect(new Interval(new Note('Gb'), 'd5', 'down').notes[1].toString()).toBe('C4');
    expect(new Interval(new Note('Gb'), 'P5', 'down').notes[1].toString()).toBe('C4b');
    expect(new Interval(new Note('Gb'), 'd6', 'down').notes[1].toString()).toBe('B3');
    expect(new Interval(new Note('Gb'), 'm6', 'down').notes[1].toString()).toBe('B3b');
    expect(new Interval(new Note('Gb'), 'A5', 'down').notes[1].toString()).toBe('C4bb');
    expect(new Interval(new Note('Gb'), 'M6', 'down').notes[1].toString()).toBe('B3bb');
    expect(new Interval(new Note('Gb'), 'd7', 'down').notes[1].toString()).toBe('A3');
    expect(new Interval(new Note('Gb'), 'm7', 'down').notes[1].toString()).toBe('A3b');
    expect(new Interval(new Note('Gb'), 'A6', 'down').notes[1].toString()).toBe('B3bbb');
    expect(new Interval(new Note('Gb'), 'M7', 'down').notes[1].toString()).toBe('A3bb');
    expect(new Interval(new Note('Gb'), 'd8', 'down').notes[1].toString()).toBe('G3');
    expect(new Interval(new Note('Gb'), 'P8', 'down').notes[1].toString()).toBe('G3b');
  });

  test('should build decending intervals under A# correctly', () => {
    expect(new Interval(new Note('A#'), 'P1', 'down').notes[1].toString()).toBe('A4#');
    expect(new Interval(new Note('A#'), 'd2', 'down').notes[1].toString()).toBe('G4###');
    expect(new Interval(new Note('A#'), 'm2', 'down').notes[1].toString()).toBe('G4##');
    expect(new Interval(new Note('A#'), 'A1', 'down').notes[1].toString()).toBe('A4');
    expect(new Interval(new Note('A#'), 'M2', 'down').notes[1].toString()).toBe('G4#');
    expect(new Interval(new Note('A#'), 'd3', 'down').notes[1].toString()).toBe('F4###');
    expect(new Interval(new Note('A#'), 'm3', 'down').notes[1].toString()).toBe('F4##');
    expect(new Interval(new Note('A#'), 'A2', 'down').notes[1].toString()).toBe('G4');
    expect(new Interval(new Note('A#'), 'M3', 'down').notes[1].toString()).toBe('F4#');
    expect(new Interval(new Note('A#'), 'd4', 'down').notes[1].toString()).toBe('E4##');
    expect(new Interval(new Note('A#'), 'P4', 'down').notes[1].toString()).toBe('E4#');
    expect(new Interval(new Note('A#'), 'A3', 'down').notes[1].toString()).toBe('F4');
    expect(new Interval(new Note('A#'), 'A4', 'down').notes[1].toString()).toBe('E4');
    expect(new Interval(new Note('A#'), 'd5', 'down').notes[1].toString()).toBe('D4##');
    expect(new Interval(new Note('A#'), 'P5', 'down').notes[1].toString()).toBe('D4#');
    expect(new Interval(new Note('A#'), 'd6', 'down').notes[1].toString()).toBe('C4###');
    expect(new Interval(new Note('A#'), 'm6', 'down').notes[1].toString()).toBe('C4##');
    expect(new Interval(new Note('A#'), 'A5', 'down').notes[1].toString()).toBe('D4');
    expect(new Interval(new Note('A#'), 'M6', 'down').notes[1].toString()).toBe('C4#');
    expect(new Interval(new Note('A#'), 'A6', 'down').notes[1].toString()).toBe('C4');
    expect(new Interval(new Note('A#'), 'd7', 'down').notes[1].toString()).toBe('B3##');
    expect(new Interval(new Note('A#'), 'm7', 'down').notes[1].toString()).toBe('B3#');
    expect(new Interval(new Note('A#'), 'M7', 'down').notes[1].toString()).toBe('B3');
    expect(new Interval(new Note('A#'), 'd8', 'down').notes[1].toString()).toBe('A3##');
    expect(new Interval(new Note('A#'), 'P8', 'down').notes[1].toString()).toBe('A3#');
  });
});
